/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package S1.Proyecto.Formularios.Registros;

import S1.Proyecto.Controladores.UsuarioJpaController;
import S1.Proyecto.Entidades.Usuario;
import S1.Proyecto.FuncionesAuxiliares.Constantes;
import S1.Proyecto.FuncionesAuxiliares.ConvertirMayusculas;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author WELLINGTON
 */
public class ListaUsuarios extends javax.swing.JFrame {

    
    public ListaUsuarios() {
        initComponents();
        totalus.setText("");
        listarUsuarios();
        limpiar();
        bloquear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        modificarUsuario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        totalus = new javax.swing.JLabel();
        dirtxt = new javax.swing.JTextField();
        tipotxt = new javax.swing.JComboBox<>();
        teltxt = new javax.swing.JTextField();
        nomtxt = new javax.swing.JTextField();
        emtxt = new javax.swing.JTextField();
        aceptar = new javax.swing.JButton();
        cerrar1 = new javax.swing.JButton();
        apellidotxt = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        aptxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ustxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("USUARIOS EXISTENTES");

        modificarUsuario.setText("MODIFICAR");
        modificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarUsuarioActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("No. Usuarios:");

        totalus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        totalus.setText("HolaMundo");

        dirtxt.setText("jTextField3");
        dirtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dirtxtKeyTyped(evt);
            }
        });

        tipotxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Invitado", "Administrador" }));

        teltxt.setText("jTextField4");
        teltxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                teltxtKeyTyped(evt);
            }
        });

        nomtxt.setText("jTextField1");
        nomtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomtxtKeyTyped(evt);
            }
        });

        emtxt.setText("jTextField1");
        emtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emtxtKeyTyped(evt);
            }
        });

        aceptar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        aceptar.setText("ACEPTAR");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        cerrar1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cerrar1.setText("CERRAR");
        cerrar1.setAlignmentX(1.0F);
        cerrar1.setAlignmentY(1.0F);
        cerrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrar1ActionPerformed(evt);
            }
        });

        apellidotxt.setText("Apellido");

        jLabel6.setText("Direccion");

        jLabel7.setText("Telefono");

        jLabel8.setText("E-mail");

        jLabel3.setText("Nombre");

        aptxt.setText("jTextField2");
        aptxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aptxtKeyTyped(evt);
            }
        });

        jLabel4.setText("Tipo");

        ustxt.setText("jTextField1");

        jLabel5.setText("Usuario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modificarUsuario)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(apellidotxt)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tipotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nomtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ustxt, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(aptxt, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(emtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cerrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(teltxt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(aceptar))
                                        .addComponent(dirtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(totalus)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalus)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(modificarUsuario)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ustxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(aptxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(apellidotxt, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dirtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(teltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cerrar1)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void modificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarUsuarioActionPerformed
        desbloquear();
    }//GEN-LAST:event_modificarUsuarioActionPerformed

    private void dirtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dirtxtKeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<' ' || c>' ') && (c<'ñ' || c>'ñ') && (c<'Ñ' || c>'Ñ')&&(c<'0'|| c>'9')) evt.consume();
    }//GEN-LAST:event_dirtxtKeyTyped

    private void teltxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_teltxtKeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(teltxt.getText().length()==Constantes.tel){
            evt.consume();
        }
    }//GEN-LAST:event_teltxtKeyTyped

    private void nomtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomtxtKeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<' ' || c>' ') && (c<'ñ' || c>'ñ') && (c<'Ñ' || c>'Ñ')) evt.consume();
    }//GEN-LAST:event_nomtxtKeyTyped

    private void emtxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emtxtKeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<'-' || c>'-') && (c<'_'|| c>'_')&& (c<'.'|| c>'.')&& (c<'0'|| c>'9')&& (c<'@'|| c>'@')) evt.consume();
    }//GEN-LAST:event_emtxtKeyTyped

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        //Se verifica que los campos no esten vacios antes de hacer una modificacion
        //si algun campo esta vacio, se lanza una notficacion
        //y se coloca el cursor en el campo vacio
        if((ustxt.getText().equals("")||(nomtxt.getText().equals("")) || (aptxt.getText().equals("")) ||
            (dirtxt.getText().equals("")) || (teltxt.getText().equals("")) ||
            (emtxt.getText().equals("")))){

            javax.swing.JOptionPane.showMessageDialog(this,"Debe llenar todos los campos \n","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);

            //coloca el cursor en el campo en blanco
            if(emtxt.getText().equals("")){emtxt.requestFocus();}
            if(teltxt.getText().equals("")){teltxt.requestFocus();}
            if(dirtxt.getText().equals("")){dirtxt.requestFocus();}
            if(aptxt.getText().equals("")){aptxt.requestFocus();}
            if(nomtxt.getText().equals("")){nomtxt.requestFocus();}
            if(ustxt.getText().equals("")){ustxt.requestFocus();}
        }
        else{

            try {
                //se realiza la busqueda del usuario a modificar
                UsuarioJpaController CUsuario = new UsuarioJpaController();
                Usuario usuario = CUsuario.findUsuario(ustxt.getText());
                //se almacenan los datos nuevos a la estructura "usuario"
                //para poder enviar dicha estructura, al metododo editar
                //y modificar el usuario
                usuario.setUsuario(ustxt.getText());
                usuario.setNombre(ConvertirMayusculas.ConvertirMayusculasPL(nomtxt.getText()));
                usuario.setApellido(ConvertirMayusculas.ConvertirMayusculasPL(aptxt.getText()));
                usuario.setDireccion(ConvertirMayusculas.ConvertirMayusculasPL(dirtxt.getText()));
                usuario.setTelefono(teltxt.getText());
                usuario.setEmail(emtxt.getText());

                if (tipotxt.getSelectedItem().toString().equals("Invitado")) {
                    usuario.setTipo(0);
                } else if (tipotxt.getSelectedItem().equals("Administrador")) {
                    usuario.setTipo(1);
                }

                CUsuario.edit(usuario);
                //se lanza una alerta, del proceso concluido con exito
                //se limpian los campos y se prepara todo para una nueva busqueda
                javax.swing.JOptionPane.showMessageDialog(this,"DATOS ACTUALIZADOS \n","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                limpiar();
                bloquear();
                listarUsuarios();
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

            }

    }//GEN-LAST:event_aceptarActionPerformed

    private void cerrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrar1ActionPerformed
        LlamarFormularios.llamarUsuarios();
        dispose();
    }//GEN-LAST:event_cerrar1ActionPerformed

    private void aptxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aptxtKeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<' ' || c>' ') && (c<'ñ' || c>'ñ') && (c<'Ñ' || c>'Ñ')) evt.consume();
    }//GEN-LAST:event_aptxtKeyTyped

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        //evento que permite colocar los datos de la tabla
        //en los campos correspondientes, al hacer clic en
        //en una fila de la tabla
        int select = table.getSelectedRow();
        ustxt.setText(table.getValueAt(select, 0)+"");
        nomtxt.setText(table.getValueAt(select, 1)+"");
        aptxt.setText(table.getValueAt(select, 2)+"");
        dirtxt.setText(table.getValueAt(select, 3)+"");
        teltxt.setText(table.getValueAt(select, 4)+"");
        emtxt.setText(table.getValueAt(select, 5)+"");
        if(table.getValueAt(select, 6).equals("Invitado")){
            tipotxt.setSelectedIndex(0);
        }
        if(table.getValueAt(select, 6).equals("Administrador")){
            tipotxt.setSelectedIndex(1);
        }
        bloquear();       
    }//GEN-LAST:event_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptar;
    private javax.swing.JLabel apellidotxt;
    private javax.swing.JTextField aptxt;
    private javax.swing.JButton cerrar1;
    private javax.swing.JTextField dirtxt;
    private javax.swing.JTextField emtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarUsuario;
    private javax.swing.JTextField nomtxt;
    private static javax.swing.JTable table;
    private javax.swing.JTextField teltxt;
    private javax.swing.JComboBox<String> tipotxt;
    private static javax.swing.JLabel totalus;
    private javax.swing.JTextField ustxt;
    // End of variables declaration//GEN-END:variables

    private static void listarUsuarios(){
        //se listan los usuarios existentes
        //y se llena una tabla con la informacion de cada usuario
        //para una mejor lectura de dichos datos
        UsuarioJpaController CUsuario = new UsuarioJpaController();
        //se cuentan los usuarios existentes, para tener la informacion en pantalla
        Integer cu = CUsuario.getUsuarioCount();
        //titulos de tabla
        String[] titulo = {"USUARIO","NOMBRE","APELLIDO","DIRECCION","TELEFONO","EMAIL","TIPO"};
        
        DefaultTableModel model =new DefaultTableModel(null,titulo);
        //metodo que lista los usuarios existentes, 
        //metodo existente del jpa controller
        List<Usuario> datos = CUsuario.findUsuarioEntities();
        
        //se crea un arreglo para guardar la informacion requerida de cada usuario
        String[] datosUsuario = new String[7];
        //for each que coloca los datos de los usuarios existentes en una estructura
        for (Usuario us : datos) {
            datosUsuario[0] = us.getUsuario();
            datosUsuario[1] = us.getNombre();
            datosUsuario[2] = us.getApellido();
            datosUsuario[3] = us.getDireccion();
            datosUsuario[4] = us.getTelefono();
            datosUsuario[5] = us.getEmail();
            if(us.getTipo()==0){
                datosUsuario[6] = "Invitado";
            }else if(us.getTipo()==1){
                datosUsuario[6] = "Administrador";
            }
            //agregan los datos a la tabla
            model.addRow(datosUsuario);
        }
        //se asigna el modelo creado a la tabla
        //para presentar la informacion requerida
        table.setModel(model);
        //se presenta el total de usuarios en pantalla
        totalus.setText(cu+"");
    }
    
    //metodo, para limpiar los campos, para realizar una modificacion
    private void limpiar() {                                               
        ustxt.setText("");
        nomtxt.setText("");
        aptxt.setText("");
        dirtxt.setText("");
        teltxt.setText("");
        emtxt.setText("");
        tipotxt.setSelectedItem(0);   
    }
    
    //metodo de bloqueo de campos para evitar errores
    //de usuarios, y editar usuarios por error
    private void bloquear() {                                               
        ustxt.setEnabled(false);
        nomtxt.setEnabled(false);
        aptxt.setEnabled(false);
        dirtxt.setEnabled(false);
        teltxt.setEnabled(false);
        emtxt.setEnabled(false);
        tipotxt.setEnabled(false);
    }
    
    //meotodo de desbloqueo de campos para edicion
    private void desbloquear() {                                               
        nomtxt.setEnabled(true);
        aptxt.setEnabled(true);
        dirtxt.setEnabled(true);
        teltxt.setEnabled(true);
        emtxt.setEnabled(true);
        tipotxt.setEnabled(true);
    }
    
}
